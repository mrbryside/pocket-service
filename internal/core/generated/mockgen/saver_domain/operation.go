// Code generated by MockGen. DO NOT EDIT.
// Source: ./operation.go

// Package mockSaverDomain is a generated GoMock package.
package mockSaverDomain

import (
	saver "github/mrbryside/pocket-service/internal/domain/saver"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOperation is a mock of Operation interface.
type MockOperation struct {
	ctrl     *gomock.Controller
	recorder *MockOperationMockRecorder
}

// MockOperationMockRecorder is the mock recorder for MockOperation.
type MockOperationMockRecorder struct {
	mock *MockOperation
}

// NewMockOperation creates a new mock instance.
func NewMockOperation(ctrl *gomock.Controller) *MockOperation {
	mock := &MockOperation{ctrl: ctrl}
	mock.recorder = &MockOperationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOperation) EXPECT() *MockOperationMockRecorder {
	return m.recorder
}

// InsertPocket mocks base method.
func (m *MockOperation) InsertPocket(s *saver.Saver) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertPocket", s)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertPocket indicates an expected call of InsertPocket.
func (mr *MockOperationMockRecorder) InsertPocket(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertPocket", reflect.TypeOf((*MockOperation)(nil).InsertPocket), s)
}
